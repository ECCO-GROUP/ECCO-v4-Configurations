[   
   {
      "name": "Depth",
      "standard_name" : "sea_floor_depth_below_geoid",
      "long_name": "model seafloor depth below ocean surface at rest",
      "comments_1": "Model seafloor depth corresponds to mean ocean depth below the geoid.",
      "comments_2": "Note: the MITgcm implements partial cells to better represent bathymetric variations.",
      "units": "m",
      "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "c",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "ice_shelf_draft",
      "long_name": "ice shelf draft",
      "comments_1": "Depth of the base of floating ice shelves and grounded ice",
      "comments_2": "Note: grounded ice can be in contact with the ocean",
      "units": "m",
      "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "c",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "ocean_column_thickness",
      "long_name": "ocean column thickness",
      "comments_1": "Distance between the seafloor and sea surface. Normally equivalent to Depth, but beneath ice shelves the ocean column thickness is the distance between the seafloor and the ceiling of the ice shelf cavity.",
      "comments_2": "Note: the MITgcm writes ocean column thickness to 'Depth.data', which makes sense because ocean column thickness was equivalent to seafloor depth when the model did not have ice shelf cavities.",
      "units": "m",
      "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "c",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "CS",
      "long_name": "cosine of tracer grid cell orientation vs geographical north",
      "comments_1": "CS and SN are used to calculate the geographic (meridional, zonal) components of vector fields defined on the model's llc curvilinear grid",
      "comments_2": "Note: for vector field R with x and y components R_x and R_y, respectively: R_{east} = CS R_x - SN R_y.  R_{north} = SN R_x + CS R_y",
      "units": "1",
      "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "c",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "SN",
      "long_name": "sine of tracer grid cell orientation vs geographical north",
      "comments_1": "CS and SN are used to calculate the geographic (meridional, zonal) components of vector fields defined on the model's llc curvilinear grid",
      "comments_2": "Note: for vector R with x and y components R_x and R_y, respectively: R_{east} = CS R_x - SN R_y. R_{north} = SN R_x + CS R_y.",
      "units": "1",
      "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "c",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "rA",
      "standard_name" : "cell_area",
      "long_name": "horizontal area of tracer grid cell",
      "comments_1": "",
      "comments_2": "",
      "units": "m2",
      "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "c",
      "coverage_content_type": "modelResult"
   },   
   {
      "name": "rAs",
      "standard_name" : "cell_area",
      "long_name": "area of 'u' grid cell",
      "units": "m2",
      "comments_1": "Model 'u' grid cells are staggered in space between adjacent tracer grid cells in the 'y' direction. 'u' grid cell (i,j) is situated at the 'south' edge of tracer grid cell (i, j).",
      "comments_2": "Note: 'south' does not correspond to geographic orientation but is used for convenience to describe the computational grid. See MITgcm documentation for details.",
      "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "v",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "rAw",
      "standard_name" : "cell_area",
      "long_name": "area of 'v' grid cell",
      "units": "m2",
      "comments_1": "Model 'v' grid cells are staggered in space between adjacent tracer grid cells in the 'x' direction. 'v' grid cell (i,j) is situated at the 'west' edge of tracer grid cell (i, j).",
      "comments_2": "Note: 'west' does not correspond to geographic orientation but is used for convenience to describe the computational grid. See MITgcm documentation for details.",
      "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "u",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "rAz",
      "standard_name" : "cell_area",
      "long_name": "area of vorticity 'g' grid cell",
      "comments_1": "Vorticity cells are staggered in space relative to tracer cells, nominally situated on tracer cell corners. Vorticity cell (i,j) is located at the 'southwest' corner of tracer grid cell (i, j).",
      "comments_2": "Note: 'southwest' does not correspond to geographic orientation but is used for convenience to describe the computational grid. See MITgcm documentation for details.",
      "units": "m2",
      "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "z",
      "coverage_content_type": "modelResult"
   },   
   {
      "name": "dxC",
      "long_name": "distance between centers of adjacent tracer grid cells in the 'x' direction",
      "units": "m",
      "comments_1": "Alternatively, the length of 'north' side of vorticity grid cells",
      "comments_2": "Note: 'north' does not correspond to geographic orientation but is used for convenience to describe the computational grid. See MITgcm documentation for details.",
      "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "u",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "dyC",
      "long_name": "distance between centers of adjacent tracer grid cells in the 'y' direction",
      "units": "m",
      "comments_1": "Alternatively, the length of 'east' side of vorticity grid cells",
      "comments_2": "Note: 'east' does not correspond to geographic orientation but is used for convenience to describe the computational grid. See MITgcm documentation for details.",
       "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "v",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "dxG",
      "long_name": "distance between 'southwest' and 'southeast' corners of the tracer grid cell",
      "comments_1": "Alternatively, the length of 'south' side of tracer grid cell.",
      "comments_2": "Note: 'south', 'southwest', and 'southeast' do not correspond to geographic orientation but are used for convenience to describe the computational grid. See MITgcm documentation for details.",
      "units": "m",
      "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "v",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "dyG",
      "long_name": "distance between 'southwest' and 'northwest' corners of the tracer grid cell",
      "comments_1": "Alternatively, the length of 'west' side of tracer grid cell.",
      "comments_2": "Note: 'west, 'southwest', and 'northwest' do not correspond to geographic orientation but are used for convenience to describe the computational grid. See MITgcm documentation for details.",
      "units": "m",
      "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "u",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "drC",
      "long_name": "distance between the centers of adjacent tracer grid cells in the 'z' direction",
      "units": "m",
      "comments_1": "The first element corresponds to the distance between the depth of the center of the uppermost model grid cell and the surface.",
      "comments_2": "",
      "GCMD_keywords" : "",
      "grid_dimension": "2D",
      "grid_location": "w",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "drF",
      "standard_name": "cell_thickness",
      "long_name": "distance between the top and bottom faces of a model grid cell",
      "units": "m",
      "comments_1": "Nominal grid cell thickness.",
      "comments_2": "Note: in the z* coordinate system used in ECCO V4, actual tracer grid cell thickness, h, varies through time as h(i,j,k,t)= drF(k) hfacC(i,j,k,t).",
      "GCMD_keywords" : "",
      "grid_dimension": "3D",
      "grid_location": "c",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "PHrefC",
      "long_name": "reference ocean hydrostatic pressure at tracer grid cell center",
      "units": "m2 s-2",
      "comments_1": "PHrefC = p_ref (k) / rhoConst = rhoConst g z(k) / rhoConst = g z(k), where p_ref(k) is reference hydrostatic ocean pressure at center of tracer grid cell k, rhoConst is reference density (1029 kg m-3), g is acceleration due to gravity (9.81 m s-2), and z(k) is depth at center of tracer grid cell k. Units: p:[kg m-1 s-2], rhoConst:[kg m-3], g:[m s-2], z_m(t):[m].",
      "comments_2": "Note: does not include atmospheric pressure loading. Quantity referred to in some contexts as hydrostatic pressure potential. PHIHYDcR is anomaly of PHrefC.",
      "GCMD_keywords" : "",
      "grid_dimension": "3D",
      "grid_location": "c",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "PHrefF",
      "long_name": "reference ocean hydrostatic pressure at tracer grid cell top/bottom interface",
      "units": "m2 s-2",
      "comments_1": "PHrefF = p_ref (k_l) / rhoConst = rhoConst g z(k_l) / rhoConst = g z(k_l), where p_ref(k_l) is reference hydrostatic ocean pressure at lower interface of tracer grid cell k, rhoConst is reference density (1029 kg m-3), g is acceleration due to gravity (9.81 m s-2), and z(k) is depth at center of tracer grid cell k. Units: p:[kg m-1 s-2], rhoConst:[kg m-3], g:[m s-2], z_m(t):[m].",
      "comments_2": "Note: does not include atmospheric pressure loading. Quantity referred to in some contexts as hydrostatic pressure potential. See PHrefC",
      "GCMD_keywords" : "",
      "grid_dimension": "3D",
      "grid_location": "c",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "hFacC",
      "long_name": "vertical open fraction of tracer grid cell",
      "units": "1",
      "comments_1": "Tracer grid cells may be fractionally closed in the vertical. The open vertical fraction is hFacC. The model allows for partially-filled cells to represent topographic variations more smoothly (hFacC < 1). Completely closed (dry) tracer grid cells have hFacC = 0.",
      "comments_2": "Note: the model z* coordinate system allows hFacC to vary through time. A time-invariant hFacC field is provided for reference.",
      "GCMD_keywords" : "",
      "grid_dimension": "3D",
      "grid_location": "c",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "hFacW",
      "long_name": "vertical open fraction of tracer grid cell 'west' face",
      "units": "1",
      "comments_1": "The 'west' face of tracer grid cells may be fractionally closed in the vertical. The open vertical fraction is hFacW. The model allows for partially-filled cells for smoother representation of seafloor topography. Tracer grid cells adjacent in the 'x' direction that are partially closed in the vertical have hFacW < 1. The model z* coordinate system used by the model permits hFacC, and therefore hFacW, to vary through time. A time-invariant hFacW field is provided for reference.",
      "comments_2": "Note: The term 'west' does not correspond to geographic orientation but is used for convenience to describe the computational grid. See MITgcm documentation for details.",
      "GCMD_keywords" : "",
      "grid_dimension": "3D",
      "grid_location": "u",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "hFacS",
      "long_name": "vertical open fraction of tracer grid cell 'south' face",
      "units": "1",
      "comments_1": "The 'south' face of tracer grid cells may be fractionally closed in the vertical. The open vertical fraction is hFacS. The model allows for partially-filled cells for smoother representation of seafloor topography. Tracer grid cells adjacent in the 'y' direction that are partially closed in the vertical have hFacS < 1. The model z* coordinate system used by the model permits hFacC, and therefore hFacS, to vary through time. A time-invariant hFacS field is provided for reference.",
      "comments_2": "Note:  The term 'south' does not correspond to geographic orientation but is used for convenience to describe the computational grid. See MITgcm documentation for details.",
      "GCMD_keywords" : "",
      "grid_dimension": "3D",
      "grid_location": "v",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "maskC",
      "long_name": "wet/dry boolean mask for tracer grid cell",
      "comments_1": "True for wet tracer grid cells (hFacC > 0), otherwise False. Although hFacC varies though time, MaskC is time invariant. Cells will never close if starting open and will never open if starting closed: hFacC(i,j,k,t) > 0 for all t, if hFacC(i,j,k,t=0) and hFacC(i,j,k,t) = 0 for all t, if hFacC(i,j,k,t=0) = 0.",
      "comments_2": "",
      "GCMD_keywords" : "",
      "grid_dimension": "3D",
      "grid_location": "c",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "maskW",
      "long_name": "wet/dry boolean mask for 'west' face of tracer grid cell",
      "comments_1": "True for grid cells with an opening on their 'west' face (hFacW > 0), otherwise False. Although hFacW can vary though time, maskW is time invariant. Cells will never close if starting open and will never open if starting closed: hFacW(i,j,k,t) > 0 for all t, if hFacW(i,j,k,t=0) and hFacW(i,j,k,t) = 0 for all t, if hFacW(i,j,k,t=0) = 0.",
      "comments_2": "Note: ",
      "GCMD_keywords" : "",
      "grid_dimension": "3D",
      "grid_location": "u",
      "coverage_content_type": "modelResult"
   },
   {
      "name": "maskS",
      "long_name": "wet/dry boolean mask for 'south' face of tracer grid cell",
      "comments_1": "True for grid cells with an opening on their 'south' face (hFacS > 0), otherwise False. Although hFacS can vary though time, maskS is time invariant. Cells will never close if starting open and will never open if starting closed: hFacS(i,j,k,t) > 0 for all t, if hFacS(i,j,k,t=0) and hFacS(i,j,k,t) = 0 for all t, if hFacS(i,j,k,t=0) = 0.",
      "comments_2": "Note: ",
      "GCMD_keywords" : "",
      "grid_dimension": "3D",
      "grid_location": "v",
      "coverage_content_type": "modelResult"
   }
]
